openapi: 3.0.3
info:
  title: STREET SPORTS
  version: 1.0.0
  description: 'Sardorxon tomonidan qilingan project, bu stadionlar haqida qilingan
    barcha api documentatsiyasi  '
paths:
  /api/v1/admin/:
    get:
      operationId: admin_list
      description: Api orqali userlarni json ko'rinishida ko'rish uchun view
      tags:
      - admin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: admin_create
      description: Api orqali userlarni json ko'rinishida ko'rish uchun view
      tags:
      - admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/admin/stadions/:
    get:
      operationId: admin_stadions_list
      tags:
      - admin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StadionList'
          description: ''
    post:
      operationId: admin_stadions_create
      tags:
      - admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StadionCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StadionCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StadionCreateUpdate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StadionCreateUpdate'
          description: ''
  /api/v1/admin/stadions/{id}/:
    get:
      operationId: admin_stadions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - admin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StadionDetail'
          description: ''
    put:
      operationId: admin_stadions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StadionDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StadionDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StadionDetail'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StadionDetail'
          description: ''
    patch:
      operationId: admin_stadions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStadionDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStadionDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStadionDetail'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StadionDetail'
          description: ''
    delete:
      operationId: admin_stadions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - admin
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/logout/:
    post:
      operationId: logout_create
      description: |-
        Takes a token and blacklists it. Must be used with the
        `rest_framework_simplejwt.token_blacklist` app installed.
      tags:
      - logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBlacklist'
          description: ''
  /api/v1/manager/stadions/:
    get:
      operationId: manager_stadions_list
      tags:
      - manager
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StadionList'
          description: ''
  /api/v1/owner/assign-manager/:
    post:
      operationId: owner_assign_manager_create
      tags:
      - owner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagerStadionCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ManagerStadionCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ManagerStadionCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagerStadionCreate'
          description: ''
  /api/v1/owner/dashboard/:
    get:
      operationId: owner_dashboard_retrieve
      tags:
      - owner
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/owner/stadions/:
    get:
      operationId: owner_stadions_list
      tags:
      - owner
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StadionList'
          description: ''
  /api/v1/owner/stadions/{id}/:
    get:
      operationId: owner_stadions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - owner
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StadionDetail'
          description: ''
    put:
      operationId: owner_stadions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - owner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StadionDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StadionDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StadionDetail'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StadionDetail'
          description: ''
    patch:
      operationId: owner_stadions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - owner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStadionDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStadionDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStadionDetail'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StadionDetail'
          description: ''
    delete:
      operationId: owner_stadions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - owner
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/owner/stadions/create/:
    post:
      operationId: owner_stadions_create_create
      tags:
      - owner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StadionCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StadionCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StadionCreateUpdate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StadionCreateUpdate'
          description: ''
  /api/v1/refresh/:
    post:
      operationId: refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/register/:
    post:
      operationId: register_create
      description: Userni ro'yxatdan o'tkazish uchun API view
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /api/v1/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/tokens/:
    post:
      operationId: tokens_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/user/book/:
    post:
      operationId: user_book_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StadionBooking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StadionBooking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StadionBooking'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StadionBooking'
          description: ''
  /api/v1/user/book/offline/:
    post:
      operationId: user_book_offline_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StadionBooking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StadionBooking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StadionBooking'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StadionBooking'
          description: ''
  /api/v1/user/stadions/:
    get:
      operationId: user_stadions_list
      tags:
      - user
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StadionList'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: users_retrieve
      description: Handle GET requests to retrieve a specific user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: ''
    put:
      operationId: users_update
      description: API lar orqali userni update yoki delete qilishi mumkin
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserInfo'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: ''
    patch:
      operationId: users_partial_update
      description: API lar orqali userni update yoki delete qilishi mumkin
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserInfo'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: ''
    delete:
      operationId: users_destroy
      description: API lar orqali userni update yoki delete qilishi mumkin
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/verify/:
    post:
      operationId: verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
components:
  schemas:
    ManagerStadionCreate:
      type: object
      properties:
        user:
          type: integer
        stadion:
          type: integer
      required:
      - stadion
      - user
    PatchedStadionDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/StadionImage'
          readOnly: true
        owner:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        location:
          type: string
          maxLength: 100
        capacity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        date_opened:
          type: string
          format: date
        image:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUserInfo:
      type: object
      description: User uchun serializers
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        phone:
          type: string
          description: 'Masalan: +998901234567'
          pattern: ^\+998\d{9}$
          maxLength: 13
    Register:
      type: object
      description: Registratsiya qilish uchun serilaizer
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        phone:
          type: string
          description: 'Masalan: +998901234567'
          pattern: ^\+998\d{9}$
          maxLength: 13
        password1:
          type: string
          writeOnly: true
          minLength: 6
        password2:
          type: string
          writeOnly: true
          minLength: 6
      required:
      - email
      - first_name
      - last_name
      - password1
      - password2
      - phone
    RoleEnum:
      enum:
      - admin
      - owner
      - manager
      - user
      type: string
      description: |-
        * `admin` - Admin
        * `owner` - Owner
        * `manager` - Manager
        * `user` - User
    StadionBooking:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        booking_time:
          type: string
          format: date-time
          readOnly: true
        is_offline:
          type: boolean
          readOnly: true
        is_active:
          type: boolean
        user:
          type: integer
          readOnly: true
        stadion:
          type: integer
      required:
      - booking_time
      - id
      - is_offline
      - stadion
      - user
    StadionCreateUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        location:
          type: string
          maxLength: 100
        capacity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        date_opened:
          type: string
          format: date
        image:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        is_active:
          type: boolean
        owner:
          type: integer
      required:
      - date_opened
      - id
      - location
      - name
      - owner
    StadionDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/StadionImage'
          readOnly: true
        owner:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        location:
          type: string
          maxLength: 100
        capacity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        date_opened:
          type: string
          format: date
        image:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - date_opened
      - id
      - images
      - location
      - name
      - owner
      - slug
      - updated_at
    StadionImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - image
      - uploaded_at
    StadionList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/StadionImage'
          readOnly: true
        owner:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        location:
          type: string
          maxLength: 100
        capacity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        date_opened:
          type: string
          format: date
        image:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - date_opened
      - id
      - images
      - location
      - name
      - owner
      - updated_at
    StatusEnum:
      enum:
      - open
      - closed
      - maintenance
      type: string
      description: |-
        * `open` - Ochilgan
        * `closed` - Yopilgan
        * `maintenance` - Tamirda
    TokenBlacklist:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
      required:
      - refresh
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    User:
      type: object
      description: Admin Uchun api chiqarib beruchi seralizers
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        phone:
          type: string
          description: 'Masalan: +998901234567'
          pattern: ^\+998\d{9}$
          maxLength: 13
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - email
      - first_name
      - id
      - last_name
      - phone
    UserInfo:
      type: object
      description: User uchun serializers
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        phone:
          type: string
          description: 'Masalan: +998901234567'
          pattern: ^\+998\d{9}$
          maxLength: 13
      required:
      - first_name
      - last_name
      - phone
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
